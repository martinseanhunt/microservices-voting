name: users-deploy

on:
  push:
    branches:
      # push is triggered when a PR is merged in to master
      - master
    paths:
      # Only run when files in auth service have changed
      - 'users/**'

jobs:
  # this is the job id and can be whatever we want
  build:
    # comes with docker pre installed
    runs-on: ubuntu-latest
    steps:
      # uses tells the job to retrieve a community action
      # this action checks out the repository and downloads it
      # to the runner so we can run further actions / commands against the code
      - uses: actions/checkout@v2

      # Build and push the docker image

      # change in to the service and build the docker image
      - run: cd users && docker build -f Dockerfile.prod -t martinseanhunt/voting-auth-prod .
      # using secrets defined in the repo to login to docker hub
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        # sets the env for this command, here we're setting the env variaables
        # which are used in the above command from our github secrets
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      # push the docker image to docker hub
      - run: docker push martinseanhunt/voting-auth-prod

      # Configure aws cli
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      # connect to kubernetes cluster
      - run: aws eks --region eu-west-1 update-kubeconfig --name simple-node

      # restart the deployment to use the latest image
      - run: kubectl rollout restart deployment users-depl
